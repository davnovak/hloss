% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Taxonomy.R
\name{Calibrate}
\alias{Calibrate}
\title{Calibrate \code{Taxonomy} branch weights automatically}
\usage{
Calibrate(
  tax,
  across = "subtree",
  from = 1,
  to = 1,
  f = NULL,
  use_cell_counts = TRUE,
  round_digits = 3
)
}
\arguments{
\item{tax}{\code{Taxonomy} object}

\item{across}{character: level of calibration (either \code{level} or \code{subtree}). Defaults to \code{subtree}}

\item{from}{numeric: root-level summed weight. Defaults to \code{1}}

\item{to}{numeric: leaf-level summed weight. Defaults to \code{1}}

\item{f}{function: function to transform the sequence \code{[from, to]} of length \code{tax$depth} or \code{NULL} to keep the sequence. Defaults to \code{NULL}}

\item{use_cell_counts}{logical: if \code{across == 'subtree'}, whether to divide branch weights within child nodes based on known cell counts associated with them (inverse proportionality). Alternatively, weights are uniform. Defaults to \code{TRUE}}

\item{round_digits}{numeric: to how many decimal places should the uniform weight be rounded (or \code{NULL} to not apply \code{round}). Defaults to \code{3}}
}
\description{
Calibrates branch weights of a \code{Taxonomy} automatically based on the tree topology.
}
\details{
We either fix the sum of branch weights at each depth level or fix the sum of branch weights coming out of each parent node.
For the first option, set parameter \code{across} to \code{level}.
For the second option, set parameter \code{across} to \code{subtree}.

You can use different values for the sum of each depth level (or for subtrees at different depth levels).
To do this, use the parameters \code{from} and \code{to} to create a series of values through linear interpolation.
To transform the values using a function (for example \code{exp}), pass the function as parameter \code{f}.

If calibrating by subtree, branch weights can be distributed among child nodes uniformly, or as inverserly proportional to counts
of cells associated with each child node. This way, misidentifying a rare population
}
